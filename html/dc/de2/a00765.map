<map id="hh::StateManager&lt; StateOutput, StateInputs &gt;" name="hh::StateManager&lt; StateOutput, StateInputs &gt;">
<area shape="rect" id="node2" href="$df/d5f/a00762.html" title="{hh::behavior::StateManager\lExecuteDefinition\&lt; StateInputs,\l StateOutput, StateInputs... \&gt;\n|&#45; es_\l|+ StateManagerExecuteDefinition()\l+ StateManagerExecuteDefinition()\l+ ~StateManagerExecuteDefinition()\l+ execute()\l}" alt="" coords="259,1923,493,2073"/>
<area shape="rect" id="node3" href="$d2/d4a/a00758.html" title="{hh::behavior::BaseStateManager\l\&lt; StateOutput, StateInputs... \&gt;\n||+ BaseStateManager()\l}" alt="" coords="265,1553,477,1645"/>
<area shape="rect" id="node15" href="$df/d5f/a00762.html" title="Implementation of the execute method for the StateManager. " alt="" coords="392,1695,627,1845"/>
<area shape="rect" id="node4" href="$d4/deb/a00710.html" title="{hh::AbstractTask\&lt; StateOutput,\l StateInputs... \&gt;\n|&#45; taskCore_\l&#45; mm_\l|+ AbstractTask()\l+ AbstractTask()\l+ AbstractTask()\l+ AbstractTask()\l+ AbstractTask()\l+ AbstractTask()\l+ ~AbstractTask()\l+ addResult()\l+ name()\l+ numberThreads()\l+ automaticStart()\l+ nodeType()\l+ deviceId()\l+ graphId()\l+ core()\l+ memoryManager()\l+ copy()\l+ initialize()\l+ shutdown()\l+ connectMemoryManager()\l+ getManagedMemory()\l+ canTerminate()\l}" alt="" coords="261,935,469,1349"/>
<area shape="rect" id="node14" href="$d2/d4a/a00758.html" title="Base State Manager, needed to avoid virtual inheritance of AbstractTask. " alt="" coords="386,1399,598,1491"/>
<area shape="rect" id="node5" href="$d6/d17/a00778.html" title="{hh::behavior::MultiReceivers\l\&lt; TaskInputs... \&gt;\n||}" alt="" coords="82,316,270,408"/>
<area shape="rect" id="node12" href="$d4/deb/a00710.html" title="Base node for computation. " alt="" coords="430,457,637,872"/>
<area shape="rect" id="node6" href="$d3/daf/a00790.html" title="Node Behavior definition. " alt="" coords="230,5,410,112"/>
<area shape="rect" id="node7" href="$d6/d17/a00778.html" title="MultiReceivers Behavior definition, node has a list of input types. " alt="" coords="43,161,231,253"/>
<area shape="rect" id="node8" href="$da/d96/a00782.html" title="{hh::behavior::Sender\l\&lt; StateOutput \&gt;\n||}" alt="" coords="294,316,437,408"/>
<area shape="rect" id="node9" href="$da/d96/a00782.html" title="Sender Behavior definition, node has an output type. " alt="" coords="358,161,501,253"/>
<area shape="rect" id="node13" href="$da/d96/a00782.html" title="{hh::behavior::Sender\l\&lt; TaskOutput \&gt;\n||}" alt="" coords="462,316,605,408"/>
<area shape="rect" id="node10" href="$d3/dee/a00774.html" title="{hh::behavior::Execute\l\&lt; TaskInputs \&gt;\n||+ execute()\l}" alt="" coords="681,316,831,408"/>
<area shape="rect" id="node11" href="$d3/dee/a00774.html" title="Execute Behavior definition, node that has an execution for an Input data type. " alt="" coords="681,161,831,253"/>
</map>
